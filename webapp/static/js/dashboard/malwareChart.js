function periodMalwareChart(val){
        var malwareChartRemove = document.getElementById("malchart");
        malwareChartRemove.remove();
        var malChartWrap = document.getElementById('malware-chart-wrapper');
        var malchartCanvas = document.createElement('canvas');
        malchartCanvas.setAttribute("id","malchart");
        malchartCanvas.setAttribute("style","width: 500px;height: 130px;");
        malChartWrap.appendChild(malchartCanvas);
        malwareInit(val);
}
function refreshMalware(){
    var period = $("#period-select option:selected").val();
    onChangeTerms(period);
}
function setSelected(){
    var malwareSelectOptions = document.getElementsByClassName("jbtn")[0].options;
    for(var i=0;i<malwareSelectOptions.length;i++){
        if(malwareSelectOptions[i].innerText==="일"){
            malwareSelectOptions[i].setAttribute("selected","selected");
        }
    }
}


var dataTotal;

function addMalwareData(chart, data) {
    chart.data.labels=data.ip;
    for(var i=0;i<chart.data.datasets.length;i++){

        chart.data.datasets[i].data=data[chart.data.datasets[i].label];
    }
    var xlength = chart.options.scales.xAxes.length
    for(var i=0;i<xlength;i++){
        chart.options.scales.xAxes[i].ticks.stepSize=getMalwareStepSize(data["total"]);
    }
}

// var tmpData={
//     "total": "46704",
//     "ip": [
//         "127.0.0.1",
//         "127.0.0.1",
//         "127.0.0.1",
//         "127.0.0.1",
//         "127.0.0.1",
//         "127.0.0.1"
//     ],
//     "Cured": [
//         "44","44","44","44","44","44",
//     ],
//     "Infect": [
//         "33","33","33","33","33","33",
//     ],
//     "interval": "5",
//     "Normal": [
//         "11","11","11","11","11","11",
//     ],
//     "Fail": [
//         "22","22","22","22","22","22",
//     ]
// }

function getMalwareNode(period,malwareChartData){

    var result = {};
    $.ajax({
        url:"/dashboard/server/node",
        method:"GET",
        data:{period:period},
        async:false,
        beforeSend: function(before_res){

            // console.log("sending....",before_res)
        },
        complete: function(comp_res){

        },
        error: function(err_res){
            // console.log("err",err_res)
        },
        success:function(suc_res){
            dataTotal=suc_res["total"]
            result=suc_res;
            // console.log("suc",suc_res)
            // console.log(suc_res)
            if(malwareChartData!=null) {
                // console.log("malwareChartData",malwareChartData)

                // suc_res.ip.push("test");

                console.log("suc_res",suc_res)

                addMalwareData(malwareChartData, suc_res);
                malwareChartData.update();

            }

        }
    });
    return result;
}
// function clickChartLabel(malwareChartData,total){
//     // console.log(malwareChartData.data.datasets[0])
//     // console.log(malwareChartData.options.scales.xAxes[0])
//
//     var count = 0;
//     var setCount = 0;
//     for(var i=0;i<malwareChartData.data.datasets.length;i++){
//         if(malwareChartData.data.datasets[i]._meta[0].hidden===true){
//             for(var j=0;j<malwareChartData.data.datasets[i].data.length;j++) {
//                 if(malwareChartData.data.datasets[i].data[j]>setCount) {
//                     setCount = parseInt(malwareChartData.data.datasets[i].data[j]);
//                 }
//             }
//             count=count+setCount;
//         }
//         setCount=0;
//     }
//     malwareChartData.options.scales.xAxes[0].ticks.stepSize=getMalwareStepSize(total);
//     malwareChartData.update();
// }



function malwareChart(data){
    var stepSize = getMalwareStepSize(data["total"]);

    var ctx = document.getElementById("malchart").getContext('2d');
    var malwareChart = new Chart(ctx, {
        type: 'horizontalBar',
        data: {
            labels: data["ip"],
            datasets: [{
                label: 'Normal',
                backgroundColor: '#03cf5b',
                data: data["Normal"],
                borderColor: '#03cf5b',
                borderWidth: 1
            },
                {
                    label: 'Infect',
                    backgroundColor: '#F55353',
                    data: data["Infect"],
                    borderColor: '#F55353',
                    borderWidth: 1
                },
                {
                    label: 'Cured',
                    backgroundColor: '#2ABFF8',
                    data: data["Cured"],
                    borderColor: '#2ABFF8',
                    borderWidth: 1
                },
                {
                    label: 'Fail',
                    backgroundColor: '#5a5a5a',
                    data: data["Fail"],
                    borderColor: '#5a5a5a',
                    borderWidth: 1
                }
            ]
        },
        options: {
            responsive: true,
            layout: {
                padding: {
                    top: 30,
                    bottom: 10,
                    left: 20,
                    right: 50
                }
            },
            title: {
                display: true,
                text: '악성 코드 감염 현황',
                fontSize: 16
            },
            scales: {
                xAxes: [{
                    ticks: {
                        min: 0,
                        beginAtZero: true,
                        // precision: 0,
                        stepSize: stepSize
                    },
                    stacked: true,
                    scaleLabel: {
                        display: true,
                        labelString: '',
                        fontSize: 16
                    }
                }],
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        stepSize: 10
                    },
                    stacked: false,
                    scaleLabel: {
                        display: true,
                        labelString: '',
                        fontSize: 16
                    },
                }]
            }}
    });

    return malwareChart;
}

function getMalwareStepSize(data){
    // console.log("stepsize Data = "+data);
    var num = 0;
    // console.log("num: "+num);
    num=data;
    if(num<6){
        return 1;
    }else{
        return 0;
    }
}

var malSetInterval=0;
var malChartData = {};

function onChangeTerms(val){
        // console.log("clear ",malSetInterval);
        // console.log("malChartData ",malChartData);
        // console.log("val: "+val)
        clearInterval(malSetInterval);
        malChartData.clear();
        periodMalwareChart(val)
}

function malwareInit(period){
    var node = getMalwareNode(period);

    var interval = node['interval']
    malChartData = malwareChart(node);
    // console.log(malChartData)
    malSetInterval = setInterval(getMalwareNode, interval*1000*60,period,malChartData);
}

// document.getElementById("malchart").onclick = function(e){
//
//
// }


setSelected();
malwareInit("daily");